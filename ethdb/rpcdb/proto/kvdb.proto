syntax = "proto3";

package ethereum.rpcdb.api.v1;

option go_package = "github.com/ethereum/go-ethereum/ethdb/rpcdb/gen/go/api/v1";

service KV {
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Has(HasRequest) returns (HasResponse) {}
  rpc Batch(BatchRequest) returns (BatchResponse) {}
  rpc Compact(CompactRequest) returns (CompactResponse) {}
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
  rpc Put(PutRequest) returns (PutResponse) {}
  rpc Reset(ResetRequest) returns (ResetResponse) {}
  rpc Close(CloseRequest) returns (CloseResponse) {}

  rpc NewIterator(NewIteratorRequest) returns (NewIteratorResponse) {}
  rpc IteratorError(IteratorErrorRequest) returns (IteratorErrorResponse) {}
  rpc IteratorKey(IteratorKeyRequest) returns (IteratorKeyResponse) {}
  rpc IteratorNext(IteratorNextRequest) returns (IteratorNextResponse) {}
  rpc IteratorRelease(IteratorReleaseRequest) returns 
    (IteratorReleaseResponse) {}
  rpc IteratorValue(IteratorValueRequest) returns (IteratorValueResponse) {}

  rpc NewIteratorStream(NewIteratorStreamRequest) returns
    (stream NewIteratorStreamResponse) {}
}

message GetRequest {
  bytes key = 1;
}

message GetResponse {
  bytes value = 1;
}

message HasRequest {
  bytes key = 1;
}

message HasResponse {
  bool found = 1;
}

message BatchRequest {
  repeated Batch batches = 1;
}

message Batch {
  bytes key = 1;
  bytes value = 2;
  bool delete = 3;
}

message BatchResponse {
}

message NewIteratorRequest {
  bytes prefix = 1;
  bytes start = 2;
}

message NewIteratorResponse {
  string iterator_id = 1;
}


message IteratorErrorRequest {
  string iterator_id = 1;
}

message IteratorErrorResponse {
  bool error = 1;
  string msg = 2;
}

message IteratorKeyRequest {
  string iterator_id = 1;
}

message IteratorKeyResponse {
  bytes key = 1;
}

message IteratorNextRequest {
  string iterator_id = 1;
}

message IteratorNextResponse {
  bool next = 1;
}

message IteratorReleaseRequest {
  string iterator_id = 1;
}

message IteratorReleaseResponse {
}

message IteratorValueRequest {
  string iterator_id = 1;
}

message IteratorValueResponse {
  bytes value = 1;
}

message CompactRequest {
  bytes start = 1;
  bytes limit = 2;
}

message CompactResponse {
}

message DeleteRequest {
  bytes key = 1;
}

message DeleteResponse {
}

message PutRequest {
  bytes key = 1;
  bytes value = 2;
}

message PutResponse {
}

message ResetRequest {
}

message ResetResponse {
}

message CloseRequest {
}

message CloseResponse {
}

message NewIteratorStreamRequest {
  bytes prefix = 1;
  bytes start = 2;
}

message NewIteratorStreamResponse {
  bytes key = 1;
  bytes value = 2;
}
